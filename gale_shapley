# Initialization
Men = ['Mahesh', 'Hari', 'Likith', 'Lehan']
Women = ['Rachana', 'Divya', 'Keerthi', 'Shanta']

# Preferences
Men_Pref = {  # indicates the preferences of the men
    'Mahesh':   ['Rachana', 'Keerthi', 'Divya', 'Shanta'],
    'Hari': ['Divya', 'Keerthi', 'Rachana', 'Shanta'],
    'Likith':  ['Shanta', 'Divya', 'Keerthi', 'Rachana'],
    'Lehan':  ['Rachana', 'Keerthi', 'Divya', 'Shanta']
}

Women_Pref = {  # indicates the preferences of the women
    'Rachana':  ['Mahesh', 'Lehan', 'Hari', 'Likith'],
    'Divya':   ['Hari', 'Likith', 'Mahesh', 'Lehan'],
    'Keerthi': ['Mahesh', 'Hari', 'Likith', 'Lehan'],
    'Shanta':  ['Likith', 'Lehan', 'Hari', 'Mahesh']
}
def main():
    Men_Free = list(Men)
    Women_Free = list(Women)

    # Part 3: Proposal
    Matches = {
        'Mahesh':  '',
        'Hari': '',
        'Likith': '',
        'Lehan': ''
        }
    key_list = list(Matches.keys())

    # the algorithm

    while len(Men_Free) > 0:
        for man in key_list:
            for woman in Men_Pref[man]:
                if woman not in list(Matches.values()):
                    Matches[man] = woman
                    Men_Free.remove(man)
                    print('{} is no longer a free man and is tentatively engaged to {} !'.format(man, woman))
                    break
                elif woman in list(Matches.values()):
                    current_suitor = list(Matches.keys())[list(Matches.values()).index(woman)]
                    w_list = Women_Pref.get(woman)
                    if w_list.index(man) < w_list.index(current_suitor):
                        Matches[man] = woman
                        Men_Free.remove(man)
                        Matches[current_suitor] = ''
                        Men_Free.append(current_suitor)
                        print('{} was earlier engaged to {} but now is engaged to {}! '.format(woman, current_suitor, man))

    print('\n ')
    print('Stable Matching Finished ! Happy engagement !')
    for man in Matches.keys():
        print('{} is engaged to {} !'.format(man, Matches[man]))


if __name__ == "__main__":
    main()
